{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","simple-auth-app/tests/helpers/data-transfer.js","simple-auth-app/tests/helpers/drag-drop.js","simple-auth-app/tests/helpers/ember-drag-drop.js","simple-auth-app/tests/helpers/mock-event.js","simple-auth-app/tests/integration/components/navbar-test.js","simple-auth-app/tests/integration/components/todolist-class-test.js","simple-auth-app/tests/integration/components/todolist-test.js","simple-auth-app/tests/test-helper.js","simple-auth-app/tests/unit/adapters/todo-test.js","simple-auth-app/tests/unit/controllers/login-test.js","simple-auth-app/tests/unit/controllers/todo-test.js","simple-auth-app/tests/unit/models/todo-test.js","simple-auth-app/tests/unit/routes/index-test.js","simple-auth-app/tests/unit/routes/login-test.js","simple-auth-app/tests/unit/routes/todo-test.js","simple-auth-app/tests/unit/serializers/todo-test.js","simple-auth-app/tests/unit/services/testservice-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"simple-auth-app/tests/helpers/data-transfer\", [\"exports\", \"ember-drag-drop/test-support/helpers/data-transfer\"], function (_exports, _dataTransfer) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _dataTransfer.default;\n    }\n  });\n});","define(\"simple-auth-app/tests/helpers/drag-drop\", [\"exports\", \"ember-drag-drop/test-support/helpers/drag-drop\"], function (_exports, _dragDrop) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {};\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _dragDrop.default;\n    }\n  });\n  Object.keys(_dragDrop).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in _exports && _exports[key] === _dragDrop[key]) return;\n    Object.defineProperty(_exports, key, {\n      enumerable: true,\n      get: function () {\n        return _dragDrop[key];\n      }\n    });\n  });\n});","define(\"simple-auth-app/tests/helpers/ember-drag-drop\", [\"exports\", \"simple-auth-app/tests/helpers/data-transfer\"], function (_exports, _dataTransfer) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.drag = drag;\n\n  function drop($dragHandle, dropCssPath, dragEvent) {\n    let dropTarget = document.querySelector(dropCssPath);\n\n    if (dropTarget.length === 0) {\n      throw new Error(`There are no drop targets by the given selector: '${dropCssPath}'`);\n    }\n\n    Ember.run(() => {\n      triggerEvent(dropTarget, 'dragover', _dataTransfer.default.makeMockEvent());\n    });\n    Ember.run(() => {\n      triggerEvent(dropTarget, 'drop', _dataTransfer.default.makeMockEvent(dragEvent.dataTransfer.get('data.payload')));\n    });\n    Ember.run(() => {\n      triggerEvent($dragHandle, 'dragend', _dataTransfer.default.makeMockEvent());\n    });\n  }\n\n  function drag(cssPath, options = {}) {\n    let dragEvent = _dataTransfer.default.makeMockEvent();\n\n    let dragHandle = document.querySelector(cssPath);\n    Ember.run(() => {\n      triggerEvent(dragHandle, 'mouseover');\n    });\n    Ember.run(() => {\n      triggerEvent(dragHandle, 'dragstart', dragEvent);\n    });\n    andThen(function () {\n      if (options.beforeDrop) {\n        options.beforeDrop.call();\n      }\n    });\n    andThen(function () {\n      if (options.drop) {\n        drop(dragHandle, options.drop, dragEvent);\n      }\n    });\n  }\n});","define(\"simple-auth-app/tests/helpers/mock-event\", [\"exports\", \"ember-drag-drop/test-support/helpers/mock-event\"], function (_exports, _mockEvent) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {};\n  Object.defineProperty(_exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _mockEvent.default;\n    }\n  });\n  Object.keys(_mockEvent).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in _exports && _exports[key] === _mockEvent[key]) return;\n    Object.defineProperty(_exports, key, {\n      enumerable: true,\n      get: function () {\n        return _mockEvent[key];\n      }\n    });\n  });\n});","define(\"simple-auth-app/tests/integration/components/navbar-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | navbar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Navbar />\n      */\n      {\n        \"id\": \"Fxy8E5qS\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"navbar\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <Navbar>\n              template block text\n            </Navbar>\n          \n      */\n      {\n        \"id\": \"kiRmRujy\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"navbar\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"simple-auth-app/tests/integration/components/todolist-class-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | todolist-class', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <TodolistClass />\n      */\n      {\n        \"id\": \"Kzmxca5T\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"todolist-class\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <TodolistClass>\n              template block text\n            </TodolistClass>\n          \n      */\n      {\n        \"id\": \"chPbKdkl\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"todolist-class\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"simple-auth-app/tests/integration/components/todolist-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | todolist', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Todolist />\n      */\n      {\n        \"id\": \"PUfj5PEZ\",\n        \"block\": \"[[[8,[39,0],null,null,null]],[],false,[\\\"todolist\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <Todolist>\n              template block text\n            </Todolist>\n          \n      */\n      {\n        \"id\": \"TG4zHF1p\",\n        \"block\": \"[[[1,\\\"\\\\n      \\\"],[8,[39,0],null,null,[[\\\"default\\\"],[[[[1,\\\"\\\\n        template block text\\\\n      \\\"]],[]]]]],[1,\\\"\\\\n    \\\"]],[],false,[\\\"todolist\\\"]]\",\n        \"moduleName\": \"(unknown template module)\",\n        \"isStrictMode\": false\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"simple-auth-app/tests/test-helper\", [\"simple-auth-app/app\", \"simple-auth-app/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define(\"simple-auth-app/tests/unit/adapters/todo-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Adapter | todo', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let adapter = this.owner.lookup('adapter:todo');\n      assert.ok(adapter);\n    });\n  });\n});","define(\"simple-auth-app/tests/unit/controllers/login-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | login', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:login');\n      assert.ok(controller);\n    });\n  });\n});","define(\"simple-auth-app/tests/unit/controllers/todo-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | todo', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:todo');\n      assert.ok(controller);\n    });\n  });\n});","define(\"simple-auth-app/tests/unit/models/todo-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | todo', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('todo', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"simple-auth-app/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"simple-auth-app/tests/unit/routes/login-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | login', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:login');\n      assert.ok(route);\n    });\n  });\n});","define(\"simple-auth-app/tests/unit/routes/todo-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | todo', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:todo');\n      assert.ok(route);\n    });\n  });\n});","define(\"simple-auth-app/tests/unit/serializers/todo-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Serializer | todo', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let serializer = store.serializerFor('todo');\n      assert.ok(serializer);\n    });\n    (0, _qunit.test)('it serializes records', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let record = store.createRecord('todo', {});\n      let serializedRecord = record.serialize();\n      assert.ok(serializedRecord);\n    });\n  });\n});","define(\"simple-auth-app/tests/unit/services/testservice-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | testservice', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:testservice');\n      assert.ok(service);\n    });\n  });\n});","define('simple-auth-app/config/environment', [], function() {\n  var prefix = 'simple-auth-app';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('simple-auth-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}